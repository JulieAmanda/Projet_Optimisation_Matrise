{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red83\green101\blue121;\red255\green255\blue255;\red0\green0\blue0;
\red100\green56\blue32;\red196\green26\blue22;\red50\green109\blue116;\red155\green35\blue147;\red28\green0\blue207;
\red92\green38\blue153;\red57\green0\blue160;}
{\*\expandedcolortbl;;\csgenericrgb\c32401\c39745\c47507;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c39147\c22031\c12446;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c22454\c0\c62803;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\i\fs24 \cf2 \cb3 //
\f1\i0 \cf4 \

\f0\i \cf2 //  IterationDetails.cpp
\f1\i0 \cf4 \

\f0\i \cf2 //  Projet_v2
\f1\i0 \cf4 \

\f0\i \cf2 //
\f1\i0 \cf4 \

\f0\i \cf2 //  Created by JULIE AMANDA TCHOUANDEM KEMOE on 2020-10-01.
\f1\i0 \cf4 \

\f0\i \cf2 //  Copyright \'a9 2020 JULIE AMANDA TCHOUANDEM KEMOE. All rights reserved.
\f1\i0 \cf4 \

\f0\i \cf2 //
\f1\i0 \cf4 \
\
\

\f0\i \cf2 // ceci est une classe dans laquelle on va stocquer tous les informations li\'e9es \'e0 une it\'e9ration ... les solutions, les resultats de la m\'e9thode de sous-gradient ...
\f1\i0 \cf4 \
\cf5 #include \cf6 "IterationDetails.hpp"\cf4 \
\cf5 #include \cf6 <math.h>\cf4 \
\
\
\cf7 IterationDetails\cf4 ::IterationDetails(
\f2\b \cf8 int
\f1\b0 \cf4  m, 
\f2\b \cf8 int
\f1\b0 \cf4  n)\{\
    \
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMin\cf4 =\cf9 0\cf4 ;\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMax\cf4 =\cf9 100000\cf4 ;\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 pas\cf4 =\cf9 0\cf4 ;\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 lambda\cf4 =\cf9 1\cf4 ; 
\f0\i \cf2 // param\'e8tre utilis\'e9 dans la formule de calcul du pas
\f1\i0 \cf4 \
    \
    
\f0\i \cf2 //on initialise les valeurs des objectifs \'e0 0, les vals seront mises \'e0 jour au fil de l'ex\'e9cution des ssPbs
\f1\i0 \cf4 \
   
\f0\i \cf2 /* for (int i=0; i<m; i++)
\f1\i0 \cf4 \

\f0\i \cf2         ValObjSrc[i]=0;
\f1\i0 \cf4 \

\f0\i \cf2     for (int j=0; j<n; j++)
\f1\i0 \cf4 \

\f0\i \cf2         ValObjDest[j]=0;*/
\f1\i0 \cf4 \
    \
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjDest\cf4 = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 float
\f1\b0 \cf4 [n];\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjSrc\cf4  = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 float
\f1\b0 \cf4 [m];\
    \
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tX_ij\cf4  = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4 *[m];
\f0\i \cf2 //ici on va stocker les valeurs des flots des noeuds sources
\f1\i0 \cf4 \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i = \cf9 0\cf4 ; i < m; ++i)\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tX_ij\cf4 [i] = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4 [n];\
\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tW_ij\cf4 = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4 * [n];  
\f0\i \cf2 //ici on va stocker les valeurs des flots des noeuds destinations
\f1\i0 \cf4 \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j = \cf9 0\cf4 ; j < n; ++j)\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tW_ij\cf4 [j] = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4 [m];\
\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tSubGrad\cf4 = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4 * [n];  
\f0\i \cf2 //table qui va contenir les sous-gradient apr\'e8s resolution des sspb
\f1\i0 \cf4 \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j = \cf9 0\cf4 ; j < n; ++j)\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tSubGrad\cf4 [j] = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4 [m];\
\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 multiplyers\cf4 = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 float
\f1\b0 \cf4 * [n];  
\f0\i \cf2 //table qui va contenir les sous-gradient apr\'e8s resolution des sspb
\f1\i0 \cf4 \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j = \cf9 0\cf4 ; j < n; ++j)\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 multiplyers\cf4 [j] = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 float
\f1\b0 \cf4 [m];\
    \
    \
    \
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\{\
        
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j< n; j++)\{\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 multiplyers\cf4 [i][j]=\cf9 0\cf4 ;\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tW_ij\cf4 [i][j]=\cf9 0\cf4 ;\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tX_ij\cf4 [i][j]=\cf9 0\cf4 ;\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tSubGrad\cf4 [i][j]=\cf9 0\cf4 ;\
        \}\
    \}\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjDest\cf4 [i]=\cf9 0\cf4 ;\
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j< n; j++)\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjSrc\cf4 [j]=\cf9 0\cf4 ;\
    \
    \
    \
\}\
\
\

\f2\b \cf8 void
\f1\b0 \cf4  \cf7 IterationDetails\cf4 ::calculBorneMin(
\f2\b \cf8 int
\f1\b0 \cf4  m, 
\f2\b \cf8 int
\f1\b0 \cf4  n )\{\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\{\
        \cf10 cout\cf4  << 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjSrc\cf4 [i] << \cf6 " "\cf4 ; 
\f0\i \cf2 //affichage des solutions du cot\'e9 source
\f1\i0 \cf4 \
        
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMin\cf4  += 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjSrc\cf4 [i];\}\
    \cf10 cout\cf4  << \cf11 endl\cf4  ;\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j<n; j++)\{\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMin\cf4  += 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjDest\cf4 [j];\
        \cf10 cout\cf4  << 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 valObjDest\cf4 [j] <<\cf6 "  "\cf4 ;
\f0\i \cf2 // affichage des solution cot\'e9 destination
\f1\i0 \cf4 \
    \}\
  \
\}\
\
\

\f0\i \cf2 //----------------
\f1\i0 \cf4 \
\

\f2\b \cf8 void
\f1\b0 \cf4  \cf7 IterationDetails\cf4 ::calcul_subGradient ( 
\f2\b \cf8 int
\f1\b0 \cf4  m, 
\f2\b \cf8 int
\f1\b0 \cf4  n)\{\
    \
    
\f0\i \cf2 //    commencons par transposer la matrice des x_ij\'88d afin de pouvoir comparer si les solutions sont \'e9gales pourdes i,j \'e9gaux des 2 cot\'e9s sources et destinations. la diff\'e9rence nous permettra d'obtenir le sous grandient plus tard
\f1\i0 \cf4 \
    \
    
\f0\i \cf2 // on va cr\'e9er un nouveau tableau transpos\'e9 pour y retranscrire les donn\'e9es.
\f1\i0 \cf4 \
    
\f2\b \cf8 int
\f1\b0 \cf4  ** tVal_NdDest2 = 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4 * [m];\
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\
        tVal_NdDest2[i]= 
\f2\b \cf8 new
\f1\b0 \cf4  
\f2\b \cf8 int
\f1\b0 \cf4  [n];\
    
\f0\i \cf2 //construisons la transpos\'e9e
\f1\i0 \cf4 \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\{\
        
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j<n; j++)\
            tVal_NdDest2[i][j] = 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tW_ij\cf4 [i][j];\}\
    \
    
\f0\i \cf2 //calculons les ss-grad
\f1\i0 \cf4 \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\{\
        
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j<n; j++)\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tSubGrad\cf4  [i][j]= 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tW_ij\cf4 [i][j] - 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tX_ij\cf4 [i][j];\
    \}\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i = \cf9 0\cf4 ; i < m; ++i)\
        
\f2\b \cf8 delete
\f1\b0 \cf4  [] tVal_NdDest2[i];\
    
\f2\b \cf8 delete
\f1\b0 \cf4  [] tVal_NdDest2;\
    \
\}\
\

\f0\i \cf2 //---------------
\f1\i0 \cf4 \
\

\f2\b \cf8 void
\f1\b0 \cf4  \cf7 IterationDetails\cf4 ::calculPAs( 
\f2\b \cf8 int
\f1\b0 \cf4  m, 
\f2\b \cf8 int
\f1\b0 \cf4  n, 
\f2\b \cf8 float
\f1\b0 \cf4  bInf_ItPrec )\{\
    \
    
\f0\i \cf2 // Commen\'e7ons par calculer la norme de la matrice sous-gragient
\f1\i0 \cf4 \
    
\f2\b \cf8 float
\f1\b0 \cf4  norm = \cf9 0\cf4 ;\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\{\
        
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j< n; j++)\
            norm += \cf11 pow\cf4 (
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tSubGrad\cf4 [i][j],\cf9 2\cf4 );\
    \}\
   \
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 pas\cf4 = (
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 lambda\cf4  *( 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMax\cf4  - bInf_ItPrec))/norm;\
    \cf10 cout\cf4 <<\cf11 endl\cf4 ;\
    \cf10 cout\cf4 << \cf6 "la borne max est"\cf4 << 
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMax\cf4 << \cf6 "la borne min est"\cf4 <<
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMin\cf4 << \cf6 "la norm est"\cf4 << norm << \cf11 endl\cf4 ;\
    \
\}\
\
\
\
\

\f0\i \cf2 // --------
\f1\i0 \cf4 \
\
\

\f2\b \cf8 void
\f1\b0 \cf4  \cf7 IterationDetails\cf4 ::calculMultipliyers_t(
\f2\b \cf8 int
\f1\b0 \cf4  m, 
\f2\b \cf8 int
\f1\b0 \cf4  n,  
\f2\b \cf8 float
\f1\b0 \cf4  ** tMultiplyers_prec  )\{\
    \
\
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\{\
        
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j< n; j++)\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 multiplyers\cf4 [i][j]=tMultiplyers_prec[i][j] - (
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 pas\cf4  * (
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tSubGrad\cf4 [i][j]));\
    \}\
    \
\}\
\

\f0\i \cf2 // ----------
\f1\i0 \cf4 \
\
\

\f0\i \cf2 /*
\f1\i0 \cf4 \

\f0\i \cf2  
\f1\i0 \cf4 \

\f0\i \cf2  
\f1\i0 \cf4 \

\f0\i \cf2  int j=0;
\f1\i0 \cf4 \

\f0\i \cf2  int go=n-1;
\f1\i0 \cf4 \

\f0\i \cf2  while(j<n-1 ) \{
\f1\i0 \cf4 \

\f0\i \cf2  for (int i=0; i<go ; i++)
\f1\i0 \cf4 \

\f0\i \cf2  this->multiplyers[i][j]=tMultiplyers_prec[i][j] + (this->pas * (this->tSubGrad[i][j]));
\f1\i0 \cf4 \

\f0\i \cf2  go --;
\f1\i0 \cf4 \

\f0\i \cf2  j ++;
\f1\i0 \cf4 \

\f0\i \cf2  \}
\f1\i0 \cf4 \

\f0\i \cf2  int count=0;
\f1\i0 \cf4 \

\f0\i \cf2  for(int i=m-1; i==0; i--)\{
\f1\i0 \cf4 \

\f0\i \cf2  for (int j=count; j<n; j++)\{
\f1\i0 \cf4 \

\f0\i \cf2  this->multiplyers[i][j]=tMultiplyers_prec[i][j] - (this->pas * (this->tSubGrad[i][j]));
\f1\i0 \cf4 \

\f0\i \cf2  \}
\f1\i0 \cf4 \

\f0\i \cf2  count +=1;
\f1\i0 \cf4 \

\f0\i \cf2  \}
\f1\i0 \cf4 \

\f0\i \cf2  
\f1\i0 \cf4 \

\f0\i \cf2  
\f1\i0 \cf4 \

\f0\i \cf2  
\f1\i0 \cf4 \

\f0\i \cf2  */
\f1\i0 \cf4 \
\
\

\f0\i \cf2 //on va mettre \'e0 jour les valeurs de l'iteratin prec\'e9dente par les solutions en cours pour passer \'e0 une autre iteration
\f1\i0 \cf4 \

\f2\b \cf8 void
\f1\b0 \cf4  \cf7 IterationDetails\cf4 ::updateInstance(
\f2\b \cf8 int
\f1\b0 \cf4  m, 
\f2\b \cf8 int
\f1\b0 \cf4  n,  \cf7 IterationDetails\cf4  Instance)\{\
    \
    \
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMax\cf4 =Instance.\cf7 bMax\cf4 ;\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 bMin\cf4 = Instance.\cf7 bMin\cf4 ;\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 pas\cf4 =Instance.\cf7 pas\cf4 ;\
    
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 lambda\cf4 =Instance.\cf7 lambda\cf4 ;\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\{\
        
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j< n; j++)\{\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 multiplyers\cf4 [i][j]=Instance.\cf7 multiplyers\cf4 [i][j];\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tW_ij\cf4 [i][j]=Instance.\cf7 tW_ij\cf4 [i][j];\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tX_ij\cf4 [i][j]=Instance.\cf7 tX_ij\cf4 [i][j];\
            
\f2\b \cf8 this
\f1\b0 \cf4 ->\cf7 tSubGrad\cf4 [i][j]=Instance.\cf7 tSubGrad\cf4 [i][j];\
        \}\
    \}\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i=\cf9 0\cf4 ; i<m; i++)\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->valObjDest=Instance.valObjDest;\
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j=\cf9 0\cf4 ; j< n; j++)\
        
\f2\b \cf8 this
\f1\b0 \cf4 ->valObjSrc=Instance.valObjSrc;\
        \
    \
    \
\}\
\

\f2\b \cf8 void
\f1\b0 \cf4  IterationDetails::freeIterationDetails(
\f2\b \cf8 int
\f1\b0 \cf4  m, 
\f2\b \cf8 int
\f1\b0 \cf4  n)\{\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  i = \cf9 0\cf4 ; i < m; ++i)\
        
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->tSubGrad[i];\
    
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->tSubGrad;\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j = \cf9 0\cf4 ; j < n; ++j)\
        
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->tX_ij[j];\
    
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->tX_ij;\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j = \cf9 0\cf4 ; j < n; ++j)\
        
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->tW_ij[j];\
    
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->tW_ij;\
    \
    
\f2\b \cf8 for
\f1\b0 \cf4  (
\f2\b \cf8 int
\f1\b0 \cf4  j = \cf9 0\cf4 ; j < n; ++j)\
        
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->multiplyers[j];\
    
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->multiplyers;\
    \
    
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->valObjDest;\
    
\f2\b \cf8 delete
\f1\b0 \cf4  [] 
\f2\b \cf8 this
\f1\b0 \cf4 ->valObjSrc;\
\
    \
\
    \
\}\
\
}